rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnrom
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3b<- "October 17, 1986 08:24"
t3 <- "October 17, 1986 08:24"
?strptime
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
plot(x = cars$speed, y = cars$dist,xlabel="Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed",ylab = "Stopping Distance")
plot(cars,main="My Plot")
plot(cars,main="My Plot", sub = "My PLot Subtitle")
plot(cars,sub = "My PLot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim = c(10, 15))
plot(cars, pch=2)
data(mtcars)
play()
str(mtcars)
nxt()
?boxplot
boxplot(mpg ~ cyl,data=mtcars)
hist(mtcars$mpg)
swirl()
setwd("F:/OTAGO/MBusDataSc/APPLIED PROJECT/Final Project/Industrial Challenge/ResourcePackage/source/R/Linear_Interpolation_Model")
readCsvData <- function(filename=""){
if (filename=="") stop("No file given");
if (!file.exists(filename)) stop("File not found");
data <- read.table(file=filename
, header=TRUE
, sep=";"
, dec="."
, na.strings="NA"
, as.is=TRUE)
data[,1] <- as.POSIXct(strptime(data[,1], "%Y-%m-%d %H:%M:%S"));
return(data);
}
file.exists("challengeData.CSV")
file.exists("challengeData.CSV")
data <- readCsvData("challengeData.CSV")
head(data,2)
nrow(data)
Linear_data <- data.frame()
Linear_data <- data[,1]
head(Linear_data)
length(Linear_data)
Linear_data <- data.frame(Linear_data)
head(Linear_data)
colnames(Linear_data)[1] <- "Timestamp"
Linear_data[,2] <- approxfun(1:nrow(data), data[,2])(1:nrow(data))
head(Linear_data)
colnames(Linear_data)[2] <- "Supply Temp. setp"
Linear_data[,3] <- approxfun(1:nrow(data), data[,3])(1:nrow(data))
head(Linear_data)
colnames(Linear_data)[3] <- "System_supply_temperature"
Linear_data[,4] <- approxfun(1:nrow(data), data[,4])(1:nrow(data))
head(Linear_data)
colnames(Linear_data)[4] <- "Return_Temperature"
Linear_data[,5] <- approxfun(1:nrow(data), data[,5])(1:nrow(data))
head(Linear_data)
colnames(Linear_data)[5] <- "System_Power"
head(Linear_data)
nrow(Linear_data)
is.na(Linear_data)
summary(Linear_data)
library(scales)
sdate <- '2014-03-24 00:00:00'
edate <- '2014-03-26 00:00:00'
start <- which(Linear_data[,'Timestamp']== sdate )
end <- which(Linear_data[,'Timestamp']== edate )
head(data,2)
head(Linear_data,2)
sub_interval1 <- data[start:end,1:2]
nrow(sub_interval1)
head(sub_interval1)
sub_interval1[,3] <- Linear_data[start:end,2]
colnames(sub_interval1)[3] <- ("Linear_temp_setpoint")
sub_interval1[,4] <- data[start:end,3]
colnames(sub_interval1)[4] <- ("System_supply_temperature")
sub_interval1[,5] <- Linear_data[start:end,3]
colnames(sub_interval1)[5] <- ("Linear_Sys_temp")
sub_interval1[,6] <- data[start:end,4]
colnames(sub_interval1)[6] <- ("Return_Temperature")
sub_interval1[,7] <- data[start:end,5]
colnames(sub_interval1)[7] <- ("System_Power")
a <- is.na(sub_interval1[,2])
b <- is.na(sub_interval1[,4])
head(sub_interval1)
library("ggplot2")
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = Supply_temperature_setpoint)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_temp_setpoint, color = 'red'),size=1)  +
guides(colour=FALSE) +
#scale_x_continuous(breaks=seq()) +
#xlab(day) +
ylab('Supply temp. setp.') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_supply_temperature)) +
geom_point(data=sub_interval1[b,], aes(x = Timestamp, y = Linear_Sys_temp, color = 'red'),size=1)  +
guides(colour=FALSE) +
#xlab(day) +
ylab('Sys. supply temp.')
plot3 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = Return_Temperature)) + #xlab(day) +
ylab('Return Temp.')
plot4 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) + #xlab(day) +
ylab('Sys. Power')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(4, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
print(plot3, vp = vplayout(3, 1))
print(plot4, vp = vplayout(4, 1))
sdate <- '2014-09-18 00:00:00'
edate <- '2014-09-20 00:00:00'
start <- which(Linear_data[,'Timestamp']== sdate )
end <- which(Linear_data[,'Timestamp']== edate )
head(data,2)
head(Linear_data,2)
sub_interval1 <- data[start:end,1:2]
nrow(sub_interval1)
head(sub_interval1)
sub_interval1[,3] <- Linear_data[start:end,2]
colnames(sub_interval1)[3] <- ("Linear_temp_setpoint")
sub_interval1[,4] <- data[start:end,3]
colnames(sub_interval1)[4] <- ("System_supply_temperature")
sub_interval1[,5] <- Linear_data[start:end,3]
colnames(sub_interval1)[5] <- ("Linear_Sys_temp")
sub_interval1[,6] <- data[start:end,4]
colnames(sub_interval1)[6] <- ("Return_Temperature")
sub_interval1[,7] <- Linear_data[start:end,4]
colnames(sub_interval1)[7] <- ("Linear_Return_Temp")
sub_interval1[,8] <- data[start:end,5]
colnames(sub_interval1)[8] <- ("System_Power")
sub_interval1[,9] <- Linear_data[start:end,5]
colnames(sub_interval1)[9] <- ("Linear_System_Power")
head(sub_interval1)
a <- is.na(sub_interval1[,2])
b <- is.na(sub_interval1[,4])
c <- is.na(sub_interval1[,6])
d <- is.na(sub_interval1[,8])
head(sub_interval1)
library("ggplot2")
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = Supply_temperature_setpoint)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_temp_setpoint, color = 'red'),size=1)  +
guides(colour=FALSE) +
#scale_x_continuous(breaks=seq()) +
#xlab(day) +
ylab('Supply temp. setp.') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_supply_temperature)) +
geom_point(data=sub_interval1[b,], aes(x = Timestamp, y = Linear_Sys_temp, color = 'red'),size=1)  +
guides(colour=FALSE) +
#xlab(day) +
ylab('Sys. supply temp.')
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = Return_Temperature)) + #xlab(day) +
geom_point(data=sub_interval1[c,], aes(x = Timestamp, y = Linear_Return_Temp, color = 'red'),size=1)  +
ylab('Return Temp.')
plot4 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) + #xlab(day) +
geom_point(data=sub_interval1[d,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
ylab('Sys. Power')
guides(colour=FALSE) +
plot3 <- ggplot() +
guides(colour=FALSE) +
>
plot3 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = Return_Temperature)) + #xlab(day) +
geom_point(data=sub_interval1[c,], aes(x = Timestamp, y = Linear_Return_Temp, color = 'red'),size=1)  +
guides(colour=FALSE) +
ylab('Return Temp.')
plot4 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) + #xlab(day) +
geom_point(data=sub_interval1[d,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
guides(colour=FALSE) +
ylab('Sys. Power')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(4, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
print(plot3, vp = vplayout(3, 1))
print(plot4, vp = vplayout(4, 1))
grid.newpage()
print(plot4, vp = vplayout(4, 1))
file.exists("ReferenceData.csv")
data_test <- readCsvData("ReferenceData.csv")
sdate <- '2014-09-18 00:00:00'
edate <- '2014-09-20 00:00:00'
start <- which(Linear_data[,'Timestamp']== sdate )
end <- which(Linear_data[,'Timestamp']== edate )
sub_interval1 <- data[start:end,1]
nrow(sub_interval1)
head(sub_interval1)
lehgth(sub_interval1)
length(sub_interval1)
sub_interval1 <- data.frame(sub_interval1)
head(sub_interval1)
sub_interval1[,2] <- data[start:end,5]
colnames(sub_interval1)[2] <- ("System_Power")
sub_interval1[,3] <- Linear_data[start:end,5]
colnames(sub_interval1)[3] <- ("Linear_System_Power")
head(sub_interval1)
sub_interval1[,4] <- data_test[start:end,5]
colnames(sub_interval1)[4] <- ("TEST_System_Power")
head(sub_interval1)
a <- is.na(sub_interval1[,2])
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
library("ggplot2")
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'blue'),size=1)  +
guides(colour=FALSE) +
#scale_x_continuous(breaks=seq()) +
#xlab(day) +
ylab('System Power') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
guides(colour=FALSE) +
#xlab(day) +
ylab('Sys. supply temp.')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
names(sub_interval1)
colnames(sub_interval1)[1] <- ("Timestamp")
names(sub_interval1)
library("ggplot2")
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'blue'),size=1)  +
guides(colour=FALSE) +
#scale_x_continuous(breaks=seq()) +
#xlab(day) +
ylab('System Power') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
guides(colour=FALSE) +
#xlab(day) +
ylab('Sys. supply temp.')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
library(ggplot2)
library(datasets)
head(mtcars)
dim(mtcars)
str(mtcars)
qplot(mpg, disp, data = mtcars)
mtcars$cyl <- as.factor(mtcars$cyl)
qplot(mpg, disp, data = mtcars, color = cyl)
qplot(mtcars$mpg, fill = mtcars$cyl, binwidth = 2)
qplot(mpg, disp, data = mtcars, facets = cyl ~ .)
mtcars$gear <- as.factor(mtcars$gear)
qplot(mpg, disp, data = mtcars, facets = cyl ~ gear)
ggplot(mtcars, aes(mpg, disp)) + geom_point()
ggplot(mtcars, aes(mpg, disp)) + geom_point(aes(color = cyl))
ggplot(mtcars, aes(mpg)) + geom_bar(aes(fill = cyl), binwidth = 2)
ggplot(mtcars, aes(mpg, disp)) + geom_point() + facet_grid(cyl ~ .)
ggplot(mtcars, aes(mpg)) + geom_bar(aes(fill = cyl), binwidth = 2)
ggplot(mtcars, aes(mpg, disp)) + geom_point() + facet_grid(cyl ~ .)
ggplot(mtcars, aes(mpg, disp)) + geom_point() + facet_grid(cyl ~ gear)
class(mtcars$carb)
mtcars$carb <- as.factor(mtcars$carb)
ggplot(mtcars, aes(mpg, disp)) +
geom_point(aes(color = carb), size = 2.5, alpha = 0.8) +
facet_grid(cyl ~ gear) +
xlab('Miles per US gallon') +
ylab('Displacement in cubic inches') +
ggtitle('Fuel consumption vs displacement') +
theme(legend.background = element_rect(color = 'orange', fill = 'purple', size = 1.2, linetype = 'dotted'), legend.key = element_rect(fill = 'pink'), legend.position = 'top')
p <- ggplot(mtcars) + geom_point(aes(x = wt, y = mpg,
colour=factor(gear))) + facet_wrap(~am)
p
p + theme_gray()
p + theme_bw()
p + theme_linedraw()
p + theme_light()
p + theme_minimal()
p + theme_classic()
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'blue'),size=1)  +
guides(colour=TRUE) +
#scale_x_continuous(breaks=seq()) +
#xlab(day) +
ylab('System Power') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
guides(colour=TRUE) +
#xlab(day) +
ylab('Sys. supply temp.')
pushViewport(viewport(layout = grid.layout(2, 1)))
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'blue'),size=1)  +
#guides(colour=TRUE) +
#scale_x_continuous(breaks=seq()) +
#xlab(day) +
ylab('System Power') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
#guides(colour=TRUE) +
#xlab(day) +
ylab('Sys. supply temp.')
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = blue),size=1)  +
#guides(colour=TRUE) +
#scale_x_continuous(breaks=seq()) +
#xlab(day) +
ylab('System Power') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
#guides(colour=TRUE) +
#xlab(day) +
ylab('Sys. supply temp.')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'yellow'),size=1)  +
#guides(colour=TRUE) +
#scale_x_continuous(breaks=seq()) +
#xlab(day) +
ylab('System Power') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
#guides(colour=TRUE) +
#xlab(day) +
ylab('Sys. supply temp.')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'yellow'),size=1)  +
guides(colour=FALSE) +
#scale_x_continuous(breaks=seq()) +
#xlab(day) +
ylab('System Power') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
guides(colour=FALSE) +
#xlab(day) +
ylab('System Power')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'yellow'),size=1)  +
guides(colour=FALSE) +
#scale_x_continuous(breaks=seq()) +
xlab('Missing values imputed from Test Dataset') +
ylab('System Power') +
ggtitle('Missing value imputaion using Linear Interpolation Model')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
guides(colour=FALSE) +
xlab('Missing Values imputed from Linear Interpolation Model') +
ylab('System Power')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'yellow'),size=1)  +
guides(colour=FALSE) +
#scale_x_continuous(breaks=seq()) +
xlab('Missing values imputed from Test Dataset') +
ylab('System Power')
#ggtitle('System POwer')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
guides(colour=FALSE) +
xlab('Missing Values imputed from Linear Interpolation Model') +
ylab('System Power')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'yellow'),size=1)  +
guides(colour=FALSE) +
#scale_x_continuous(breaks=seq()) +
xlab('Missing values imputed from Test Dataset') +
ylab('System Power') +
ggtitle('Issue with System Power imputed values')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
guides(colour=FALSE) +
xlab('Missing Values imputed from Linear Interpolation Model') +
ylab('System Power')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
plot1 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = TEST_System_Power, color = 'yellow'),size=1)  +
guides(colour=FALSE) +
#scale_x_continuous(breaks=seq()) +
xlab('Missing Values imputed from Test Dataset') +
ylab('System Power') +
ggtitle('Issue with System Power imputed values')
plot2 <- ggplot() +
geom_line(data=sub_interval1[,], aes(x = Timestamp, y = System_Power)) +
geom_point(data=sub_interval1[a,], aes(x = Timestamp, y = Linear_System_Power, color = 'red'),size=1)  +
guides(colour=FALSE) +
xlab('Missing Values imputed from Linear Interpolation Model') +
ylab('System Power')
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 1)))
print(plot1, vp = vplayout(1, 1))
print(plot2, vp = vplayout(2, 1))
